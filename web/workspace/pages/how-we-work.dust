{>"partials/header" /}

{<title}
  How we work
{/title}

{<header}
<h1 class="hdr kilo"><span class="txt--green block">How we work</span></h1>
<div class="read">
<p class="medium alignauto">At DADI+ we've ripped up everything we thought we knew about work and have started again, structuring the business around how we want to live.
</p>
</div>
<p class="normal alignauto">By <strong>Joseph Denne</strong></p>
{/header}

<div class="container pad__bottom--x2">
  <div class="alignl read alignauto normal documentation">
{@markdown}My partners and I have been running businesses of various sizes for over fifteen years, from a two man operation to organisations with global scale and reach.

Despite huge differences in scale and offering, the physical structures of work remained constant throughout. We had an office. We had a working day. We structured teams around disciplines. We had regular meetings. Basically everything that jumps to mind when you hear the word "work".

That's not to say that it wasn't fun. This is our office on the curtain road, in the early days of Airlock (look at the size of some of those monitors!) -

![Our old office](/assets/how-we-work/airlock.jpg)

...but we structured our lives around our work: pulling all nighters was common and interruptions to holiday a given.

When we started DADI+ we decided to rip up everything we thought we knew about work. We started again from scratch, structuring everything around one core principle -

**Work should fit around our lives, not the other way round.**

## Dropping the office

The most obvious change for us was also the hardest: getting rid of our office.

There is an incredibly strong link between environment and work. If you spend your life "leaving for work", taking away a physical destination asks some serious questions about your definition and understanding of the very concept of work.

Which is of course exactly what we wanted to challenge.

At our last business we choose our offices based on finding the most equal commute for all of our staff. In practice this meant that the average trip into the office was a little over an hour. That's over a day a week spent commuting for every single person in the company: 300 hours a week lost to the underground and the pollution of central London.

Even if you can't see the obvious human strain that this represents, consider it financially: 300 hours a week is time worth around £100,000 a month. That's not to say that this is time that would otherwise be worked, simply that the collective time lost to the commute can be staggering high.

We also noticed a trend that will be familiar to many: everyone wearing large headphones in an open plan office.

Technology started significantly and noticeably shifting the way that we work a decade or so ago. It is now common to use instant messaging to speak with the person two desks down from you, rather than actually talking to them. This along with the prevalence of headphones is a signifier of change in working practices; a move away from a traditional, synchronous method of work to one of asynchronicity.

Not having a central office embraces this change. It enables us to work in entirely new ways, and has removed the traditional structures and politics that come with location-based working. For us, everything is asynchronous.

This change has also enabled us to think about hiring entirely differently. It is a false conceit to think that the best coders, designers and strategists live within an hour of central London. Not having an office means that we can look far and wide for the best possible talent.

We have team members who prefer a traditional working environment for whom we provide cover for the rental of a shared office space. We have team members who cafe hop. We have team members who have a home office (I'm sat in mine as I type). We have team members in London. We have team members outside of London. We have team members in different countries.

And of course it is impossible to generalise about the time of day that we are at our most productive. A commute is an avoidable disruption, just like the time we choose to eat or whether or not we put on clothes. Giving individuals the freedom to organise their time according to their own productivity peaks and troughs avoids the breaking of a train of thought in order to jump on a train.

### Extreme remoting

This is Jim -

![Mr James Lambie](/assets/how-we-work/jim.jpg)

He's one of our Lead Developers. Tomorrow he leaves for the first day of a 15,000 mile - ! - bike ride that will take him all the way to New Zealand. He's starting in Brighton.

While he'll be on the road for the majority of the time, he is staying on as part of our team, leading the development on some of our core underlying technologies. We like to think that he'll be cycling with one hand on the handlebars and one hand typing furiously on a laptop strapped to the side of his bike, but in reality he'll be contributing in fits and starts, working blocks of time from key cities en route, predominantly through the cold winter months.

This is an extreme example of what asynchronous working enables, but it proves the point. There is no way that this trip could have been accommodated at our last agency.

You can follow Jim's amazing journey on [agreatdistance.org](http://www.agreatdistance.org), which includes a wealth of data, from his current coordinates - useful if you want to wave him on! - to the distance he has travelled.

He is raising money for both Diabetes UK and Diabetes NZ during the journey. You can donate [here](http://www.justgiving.com/agreatdistance).

## Meetings are still ███████ toxic

37signals originated "meetings are toxic" in their book, [Getting Real](https://gettingreal.37signals.com/).

Meetings are traditionally called when something needs hashing out. They tend to invite more people than necessary, reflect the hierarchy and politics within the organisation and usually last much longer than necessary.

In short, meetings kill productivity.

In technology it makes far more sense and is far more productive to just get on with it - to push a branch up, check out the diff, and then iterate on that diff rather than to assume that you're going to perfectly whiteboard a system architecture ahead of time.

What is true of programming is true for every other aspect of business.

Even if you take notes in a meeting, you can't capture everything. You make a judgement at a point in time as to what to write down. Then a week later you try to remember what wasn't written down as it becomes apparent that that portion of the discussion was more important.

You don't have this problem with chat transcripts. Forcing people to reduce their otherwise rambling thoughts into concrete sentences helps focus discussion.

Of course we still have meetings at DADI+ from time to time, but they are the exception rather than the rule.

### Rules to live by

*   Do not attend any meeting without an agenda
*   If a decision can be taken over phone or by chat, do so instead of arranging or attending a meeting
*   No meeting should be more than 30 minutes in length
*   Only the most important people should attend a meeting. Others can be informed by email
*   Never hold meetings to review output. Reviews should be handled offline first, with a meeting for discussion of the output only held where absolutely necessary

## Working asynchronously

A synchronous working style is one where some or all of the members of a team regularly stop what they’re doing, meet, discuss and agree on the next steps to take, before getting back to work implementing those steps. These synchronous "join points" are frequent, unavoidable, and built into the structure of the work.

An asynchronous working style is one where the entire team rarely, if ever, gets together for big agreements and discussions. Each individual team member more or less works on their own and at their own pace, with collaboration and agreement being handled by asynchronous mechanisms.

![The future of work](/assets/how-we-work/working-asynchronously.png)

Asynchronous working centres around shared artefacts, with each member of a team gradually accreting layers and complexity onto those artefacts. The most common example is commits to a source code repository. Another good example is online document sharing, with multiple editors and commenters. Team members usually have multiple related threads of work running simultaneously, so that if one is blocked on input from someone else, another thread can be picked up in order to maintain forward momentum.

Working asynchronously enables our team to be geographically distributed and to choose the hours that suit them the best.

In short it enables our team to put their lives first.

## The right tools for the job

Of course none of this would work without the right tools in support.

After our staff, the most important aspect of how we work is the tools that we use on a daily basis. In the event that a particular tool doesn't work for us, we'll move on to something else. We think about this stuff frequently. Are we still working well together today, even though we are double the size we were six months ago?

The tools make the difference.

### Slack

Slack is probably most important tool in use at DADI+. It's a chat platform organised around public and private channels.

Slack is asynchronous. Asynchronous communication means that I can step out for lunch and catch up on transcripts when I get back. It means that I can ask a colleague a question and not worry about bothering her, as she'll get back to me when she's available. Asynchronous communication means I can go to rural Somerset and work a normal day.

![Slack](/assets/how-we-work/slack.png)

Find out more: [slack.com](https://slack.com/)

### Speek

Speek is a conference call service that does things a little differently. It's a visual service that shows you who is connected and who is speaking. It allows you to chat and to take notes, record conference calls and share files to one or more of the people on a call.

It's what Skype could have been.

![Speek](/assets/how-we-work/speek.png)

Find out more: [speek.com](https://www.speek.com/)

### Github

Github allows you to collaborate on anything. It's a version control system, but one that doesn't suck.

We predominantly use it for source code control, but are increasingly using it for everything else as well.

![Github](/assets/how-we-work/github.png)

Find out more: [github.com](https://github.com/)

### Droplr

Droplr is a better version of Drop Box. It ditches the concept of the folder to provide a frictionless, sync-less sharing platform.

It is an integral part of our daily workflow, used for secure sharing internally, with our clients and with our suppliers.

![Droplr](/assets/how-we-work/droplr.png)

Find out more: [droplr.com](https://droplr.com/hello)

### Trello

Trello is a super simple, web-based team coordination system. We use it in support of delivery for our clients, where it is perfectly aligned to our development approach (KANBAN and continuous integration).

Trello offers several benefits over traditional "todo list" software -

*   The ability to see not just whether a task has been completed or not, but what stage of completion it is in
*   The ability to limit the amount of work you have in progress at any one time
*   The ability to easily collaborate with others, where each person has their own cards but they are all posted to the same board

![Trello](/assets/how-we-work/trello.png)

Find out more: [trello.com](https://trello.com/)

## The result of all this?

We are more productive than we ever have been. Startlingly so. And we are producing a standard of work way and above even our highest expectations. Change is good.

## Join us

Interested in shaking up your working life? We're hiring. [Find out more](/careers).{/markdown}
  </div>
</div>

{>"partials/footer" /}